<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="SMS">
	<resultMap id="ResultMap" type="SMS" >
		<result column="sendId" property="sendId"/>
		<result column="recvId" property="recvId"/>
		<result column="content" property="content"/>
		<result column="sendDate" property="sendDate"/>
		<result column="image" property="image"/>
		<result column="read" property="read"/>
		<result column="deleted" property="deleted"/>
	</resultMap>
	
<!-- selectSMS : 새로온 메세지의 수를 카운트 -->
	<select id="newSMS" parameterType="integer" resultType="integer">
		select count(*) from SMS where recvId=#{recvId} and read='0'
	</select>

<!-- listNewSenders : 새 메세지를 보낸 발신자들의 리스트를 조회 -->	
	<select id="listNewSenders" parameterType="String" resultMap="ResultMap">
		select distinct sendId from SMS where recvId=#{recvId} and read='0'
	</select>

<!-- listNewSMS : 새 메세지들을 모두 조회 -->	
	<select id="listNewSMS" parameterType="String" resultMap="ResultMap">
		select * from SMS where recvId=#{recvId} and deleted='0' and read='0'
	</select>

<!-- detailSMS : 특정 발신자와 주고 받은 문자를 모두 조회 -->
	<select id="detailSMS" parameterType="SMS" resultMap="ResultMap">
		select * from SMS 
		where (recvId=#{recvId} and sendId=#{sendId}) or (recvId=#{sendId} and sendId=#{recvId}) 
	</select>
	
<!-- setRead : 읽은 문자들을 '읽음'상태로 설정 -->	
	<update id="setRead" parameterType="SMS">
		update SMS
		set read='1'
		where recvId=#{recvId} and sendId=#{sendId}
	</update>

<!-- sendNewMsg : 문자 전송 -->
	<insert id="sendNewMsg" parameterType="SMS">
		insert into SMS (sendId, recvId, content) values (#{sendId}, #{recvId}, #{content}) 
	</insert>	
</mapper>